name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "flask-app-slwstd"
  EB_APPLICATION_NAME       : "MyFlask"
  EB_ENVIROMENT_NAME        : "MyFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-north-1"
  
on:
  push:
    branches:
      - main


jobs:
 my_ci_part:
   runs-on: ubuntu-latest

   steps:
      - name: Git repo clone
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
           aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY}}
           aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY}}
           aws-region           : ${{ env.AWS_REGION_NAME }}
           
      - name: Copy Deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
       
      - name: Print RESULT Message for CI Job finish
        run : echo "CI Pipeline part has been finished great"


 my_cd_part:
   runs-on: ubuntu-latest
   needs: [my_ci_part]

   steps:

      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
           aws-access-key-id    : ${{ secrets.MY_AWS_ACCESS_KEY}}
           aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY}}
           aws-region           : ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanStalk Application
        run:
          aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "VER-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
     
      - name: Deploy new ElasticBeanStalk Application Version
        run: aws elasticbeanstalk update-enviroment --enviroment-name ${{ env.EB_ENVIROMENT }} --version-label "VER-${{ github.sha }}"
        
      - name: Print RESULT Message for CD Job finish  
        run : echo "CD Pipeline part has been finished great"
